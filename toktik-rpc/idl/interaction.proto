syntax = "proto3";
package interaction;
import "user.proto";
option go_package = "interaction";

message FollowActionRequest{
   string token = 1; // 用户鉴权token
   int64 to_user_id = 2; // 对方用户id
   int32 action_type = 3; // 1-关注，2-取消关注
  int64  my_user_id = 4; // 当前用户id
}

message FollowActionResponse{
  int64 status_code = 1 ; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
}

message FollowListRequest{
   int64 user_id = 1; // 用户id
   int64 my_user_id = 2; //当前登录用户
}

message FollowListResponse{
   int64 status_code = 1; // 状态码，0-成功，其他值-失败
   string status_msg = 2; // 返回状态描述
   repeated user.User user_list = 3; // 用户信息列表
}

message FansListRequest{
   int64 user_id = 1; // 用户id
  int64 my_user_id = 2; //当前登录用户
}

message FansListResponse{
   int64 status_code = 1; // 状态码，0-成功，其他值-失败
   string status_msg = 2; // 返回状态描述
  repeated user.User user_list = 3; // 用户列表
}

message FriendListRequest{
   int64 user_id = 1; // 用户id
   int64 my_user_id = 2; //当前登录用户
}

message FriendListResponse{
   int64 status_code = 1; // 状态码，0-成功，其他值-失败
   string status_msg = 2; // 返回状态描述
  repeated user.User user_list = 3; // 用户列表
}

message FriendUser {
    optional string chat_message = 1; // 和该好友的最新聊天消息
     int64 msgType = 2; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
}

message IsFollowTargetRequest{
  int64 user_id = 1; // 用户id
  int64 target_id = 2; // 用户id
}

message IsFollowTargetResponse{
  int64 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  bool exist = 3;
}

message IsFollowManyTargetsRequest{
  int64 user_id = 1; // 用户id
  repeated int64 target_ids = 2; // 用户id
}

message IsFollowManyTargetsResponse{
  int64 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated bool many_exist = 3;
}

message IsFriendRequest{
  int64 user_id = 1;
  int64 target_id = 2;
}

message IsFriendResponse{
  int64 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  bool is_friend = 3;
}

service InteractionService{
  rpc FollowSB(FollowActionRequest) returns (FollowActionResponse) {}
  rpc FollowList(FollowListRequest) returns (FollowListResponse) {}
  rpc FansList(FansListRequest) returns (FansListResponse) {}
  rpc FriendList(FriendListRequest) returns (FriendListResponse) {}
  rpc IsFollowTarget(IsFollowTargetRequest) returns (IsFollowTargetResponse){}
  rpc IsFollowManyTargets(IsFollowManyTargetsRequest)returns(IsFollowManyTargetsResponse){}
  rpc IsFriend(IsFriendRequest)returns(IsFriendResponse){}
}
